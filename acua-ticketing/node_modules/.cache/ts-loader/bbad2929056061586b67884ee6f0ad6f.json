{"remainingRequest":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/babel-loader/lib/index.js!/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/ts-loader/index.js??ref--13-2!/Users/matthew/Desktop/acuaV_2/acua-ticketing/src/store/api.ts","dependencies":[{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/src/store/api.ts","mtime":1568006026832},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport var api = axios.create({\n  baseURL: 'https://acua-server.herokuapp.com/' // points to loopback server wherever hosted\n\n});\n/**\n * Ticket API calls\n */\n\nexport function fetchTickets(_x) {\n  return _fetchTickets.apply(this, arguments);\n}\n\nfunction _fetchTickets() {\n  _fetchTickets = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(user) {\n    var order, where, limit, response;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            order = 'filter[order]=index ASC';\n            where = \"filter[where][and][0][location]=\".concat(user.location) + \"&filter[where][and][1][window]=\".concat(user.window) + \"&filter[where][and][2][isComplete]=false\";\n            limit = 'filter[limit]=12';\n            _context.next = 5;\n            return api.get(\"/tickets?\".concat(order, \"&\").concat(where, \"&\").concat(limit));\n\n          case 5:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchTickets.apply(this, arguments);\n}\n\nexport function fetchTotal(_x2) {\n  return _fetchTotal.apply(this, arguments);\n}\n\nfunction _fetchTotal() {\n  _fetchTotal = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(user) {\n    var where, response;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            where = \"where[and][0][location]=\".concat(user.location) + \"&where[and][1][window]=\".concat(user.window) + \"&where[and][2][isComplete]=false\";\n            _context2.next = 3;\n            return api.get(\"/tickets/count?\".concat(where));\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data.count);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchTotal.apply(this, arguments);\n}\n\nexport function removeTicket(_x3, _x4) {\n  return _removeTicket.apply(this, arguments);\n}\n\nfunction _removeTicket() {\n  _removeTicket = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(id, update) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return api.patch(\"tickets/\".concat(id), update);\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _removeTicket.apply(this, arguments);\n}\n\nexport function strikeTicket(_x5, _x6) {\n  return _strikeTicket.apply(this, arguments);\n}\n/**\n * FAQ API calls\n */\n\nfunction _strikeTicket() {\n  _strikeTicket = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(id, ticket) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return api.put(\"tickets/\".concat(id), ticket);\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _strikeTicket.apply(this, arguments);\n}\n\nexport function fetchFaqs(_x7) {\n  return _fetchFaqs.apply(this, arguments);\n}\n\nfunction _fetchFaqs() {\n  _fetchFaqs = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(user) {\n    var order, where, limit, response;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            order = 'filter[order]=index ASC';\n            where = \"&filter[where][and][1][window]=\".concat(user.window) + \"&filter[where][and][2][isComplete]=false\";\n            limit = 'filter[limit]=12';\n            _context5.next = 5;\n            return api.get(\"/faqs?\".concat(order, \"&\").concat(where, \"&\").concat(limit));\n\n          case 5:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", response.data);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _fetchFaqs.apply(this, arguments);\n}\n\nexport function fetchFaqTotal(_x8) {\n  return _fetchFaqTotal.apply(this, arguments);\n}\n\nfunction _fetchFaqTotal() {\n  _fetchFaqTotal = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(user) {\n    var where, response;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            where = \"&where[and][1][window]=\".concat(user.window) + \"&where[and][2][isComplete]=false\";\n            _context6.next = 3;\n            return api.get(\"/faqs/count?\".concat(where));\n\n          case 3:\n            response = _context6.sent;\n            return _context6.abrupt(\"return\", response.data.count);\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _fetchFaqTotal.apply(this, arguments);\n}\n\nexport function answerFaq(_x9, _x10) {\n  return _answerFaq.apply(this, arguments);\n}\n/**\n * User API calls\n */\n\nfunction _answerFaq() {\n  _answerFaq = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(id, update) {\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return api.patch(\"faqs/\".concat(id), update);\n\n          case 2:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _answerFaq.apply(this, arguments);\n}\n\nexport function loginUser(_x11) {\n  return _loginUser.apply(this, arguments);\n}\n\nfunction _loginUser() {\n  _loginUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(userSubmit) {\n    var response;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return api.patch('/users/login', userSubmit);\n\n          case 2:\n            response = _context8.sent;\n            return _context8.abrupt(\"return\", response.data);\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _loginUser.apply(this, arguments);\n}\n\nexport function logoutUser(_x12) {\n  return _logoutUser.apply(this, arguments);\n}\n\nfunction _logoutUser() {\n  _logoutUser = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(user) {\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return api.patch('/users/logout', user);\n\n          case 2:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _logoutUser.apply(this, arguments);\n}",{"version":3,"sources":["/Users/matthew/Desktop/acuaV_2/acua-ticketing/src/store/api.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { Ticket, UserSubmit, User, Faq } from './models'\r\n\r\nexport const api = axios.create({\r\n  baseURL: 'https://acua-server.herokuapp.com/' // points to loopback server wherever hosted\r\n})\r\n\r\n/**\r\n * Ticket API calls\r\n */\r\n\r\nexport async function fetchTickets(user: any): Promise<Ticket[]> {\r\n  const order: string = 'filter[order]=index ASC'\r\n  const where: string = `filter[where][and][0][location]=${user.location}`\r\n  + `&filter[where][and][1][window]=${user.window}`\r\n  + `&filter[where][and][2][isComplete]=false`\r\n  const limit: string = 'filter[limit]=12'\r\n\r\n  const response = await api.get(`/tickets?${order}&${where}&${limit}`)\r\n\r\n  return response.data as Ticket[]\r\n}\r\n\r\nexport async function fetchTotal(user: any): Promise<number> {\r\n  const where: string = `where[and][0][location]=${user.location}`\r\n  + `&where[and][1][window]=${user.window}`\r\n  + `&where[and][2][isComplete]=false`\r\n\r\n  const response = await api.get(`/tickets/count?${where}`)\r\n\r\n  return response.data.count as number\r\n}\r\n\r\nexport async function removeTicket(id: number, update: any): Promise<void> {\r\n  await api.patch(`tickets/${id}`, update)\r\n}\r\n\r\nexport async function strikeTicket(id: number, ticket: Ticket): Promise<void> {\r\n  await api.put(`tickets/${id}`, ticket)\r\n}\r\n\r\n/**\r\n * FAQ API calls\r\n */\r\n\r\nexport async function fetchFaqs(user: any): Promise<Faq[]> {\r\n  const order: string = 'filter[order]=index ASC'\r\n  const where: string = `&filter[where][and][1][window]=${user.window}`\r\n  + `&filter[where][and][2][isComplete]=false`\r\n  const limit: string = 'filter[limit]=12'\r\n\r\n  const response = await api.get(`/faqs?${order}&${where}&${limit}`)\r\n\r\n  return response.data as Faq[]\r\n}\r\n\r\nexport async function fetchFaqTotal(user: any): Promise<number> {\r\n  const where: string = `&where[and][1][window]=${user.window}`\r\n  + `&where[and][2][isComplete]=false`\r\n\r\n  const response = await api.get(`/faqs/count?${where}`)\r\n\r\n  return response.data.count as number\r\n}\r\n\r\nexport async function answerFaq(id: number, update: any): Promise<void> {\r\n  await api.patch(`faqs/${id}`, update)\r\n}\r\n\r\n/**\r\n * User API calls\r\n */\r\n\r\nexport async function loginUser(userSubmit: UserSubmit): Promise<User> {\r\n  const response = await api.patch('/users/login', userSubmit)\r\n\r\n  return response.data as User\r\n}\r\n\r\nexport async function logoutUser(user: any): Promise<void> {\r\n  await api.patch('/users/logout', user)\r\n}\r\n"],"sourceRoot":""}]}