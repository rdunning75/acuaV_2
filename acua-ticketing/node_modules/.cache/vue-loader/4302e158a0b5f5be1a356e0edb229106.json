{"remainingRequest":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matthew/Desktop/acuaV_2/acua-ticketing/src/components/TicketCard.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/src/components/TicketCard.vue","mtime":1568006026830},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matthew/Desktop/acuaV_2/acua-ticketing/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { Ticket } from '@/store/models'\r\nimport tickets from '@/store/modules/tickets'\r\nimport users from '@/store/modules/users'\r\n\r\n@Component\r\nexport default class TicketCard extends Vue {\r\n  public active: boolean = false\r\n  private tickets = tickets // ticket state manager\r\n  private users = users\r\n\r\n  public get queue(): Ticket[] {\r\n    return this.tickets.xtickets\r\n  }\r\n\r\n  public get ticket(): Ticket {\r\n    return this.tickets.firstTicket\r\n  }\r\n\r\n  public strikeUser(id: number, ticket: Ticket): void {\r\n    this.tickets.setLoader()\r\n\r\n    if (ticket.strikes < 2) {\r\n      ticket.strikes++\r\n      ticket.index += 5\r\n      this.tickets.strikeTicket({ id, ticket }).then((res) => {\r\n        this.tickets.loadTickets()\r\n        tickets.ticketCount(this.users.user)\r\n        this.tickets.setLoader()\r\n      })\r\n    } else {\r\n      ticket.isComplete = true\r\n      this.tickets.resolve({ id, ticket }).then((res) => {\r\n        this.tickets.loadTickets()\r\n        tickets.ticketCount(this.users.user)\r\n        this.tickets.setLoader()\r\n      })\r\n    }\r\n  }\r\n\r\n  public resolve(id: number, ticket: Ticket): void {\r\n    this.tickets.setLoader()\r\n\r\n    ticket.isComplete = true\r\n    this.tickets.resolve({ id, ticket }).then((res) => {\r\n      this.tickets.loadTickets()\r\n      tickets.ticketCount(this.users.user)\r\n      this.tickets.setLoader()\r\n    })\r\n  }\r\n}\r\n",{"version":3,"sources":["TicketCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TicketCard.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <!-- Current Ticket -->\r\n    <v-card min-height=\"317\" hover v-if=\"queue.length > 0\">\r\n      <v-card-title class=\"headline\">\r\n        Ticket #{{ticket.number}}\r\n      </v-card-title>\r\n      <v-divider/>\r\n      <v-card-text>\r\n        <v-list dense>\r\n            <v-list-tile>\r\n              <v-list-tile-content>Name:</v-list-tile-content>\r\n              <v-list-tile-content class=\"align-end font-weight-bold\">{{ ticket.name }}</v-list-tile-content>\r\n            </v-list-tile>\r\n            <v-list-tile>\r\n              <v-list-tile-content>Phone Number:</v-list-tile-content>\r\n              <v-list-tile-content class=\"align-end font-weight-bold\">{{ ticket.phone }}</v-list-tile-content>\r\n            </v-list-tile>\r\n            <v-list-tile>\r\n              <v-list-tile-content>Question:</v-list-tile-content>\r\n              <v-list-tile-action>\r\n                <v-btn flat icon color=\"teal\" @click=\"active = true\">\r\n                  <v-icon>\r\n                    open_in_new\r\n                  </v-icon>\r\n                </v-btn>\r\n              </v-list-tile-action>\r\n            </v-list-tile>\r\n            <v-list-tile>\r\n              <v-list-tile-content>Strikes:</v-list-tile-content>\r\n              <v-list-tile-content class=\"align-end font-weight-bold\">{{ ticket.strikes }}</v-list-tile-content>\r\n            </v-list-tile>\r\n          </v-list>\r\n      </v-card-text>\r\n      <v-divider/>\r\n      <v-card-actions>\r\n        <v-btn flat color=\"error\" @click=\"strikeUser(ticket.id, ticket)\">\r\n          <span v-if=\"ticket.strikes < 2\">Strike</span>\r\n          <span v-else>Strike Out</span>\r\n        </v-btn>\r\n        <v-spacer/>\r\n        <v-btn flat color=\"primary\" @click=\"resolve(ticket.id, ticket)\">resolve</v-btn>\r\n      </v-card-actions>\r\n    </v-card>\r\n    <!-- user's query -->\r\n    <v-dialog v-model=\"active\" width=\"500\">\r\n      <v-card>\r\n        <v-card-title class=\"headline\">\r\n          Ticket #{{ queue.length > 0 ? ticket.number : -1 }} Question\r\n        </v-card-title>\r\n        <v-card-text>\r\n          {{ queue.length > 0 ? ticket.query : '' }}\r\n        </v-card-text>\r\n        <v-card-actions>\r\n          <v-btn flat color=\"primary\" @click=\"active = false\">close</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { Ticket } from '@/store/models'\r\nimport tickets from '@/store/modules/tickets'\r\nimport users from '@/store/modules/users'\r\n\r\n@Component\r\nexport default class TicketCard extends Vue {\r\n  public active: boolean = false\r\n  private tickets = tickets // ticket state manager\r\n  private users = users\r\n\r\n  public get queue(): Ticket[] {\r\n    return this.tickets.xtickets\r\n  }\r\n\r\n  public get ticket(): Ticket {\r\n    return this.tickets.firstTicket\r\n  }\r\n\r\n  public strikeUser(id: number, ticket: Ticket): void {\r\n    this.tickets.setLoader()\r\n\r\n    if (ticket.strikes < 2) {\r\n      ticket.strikes++\r\n      ticket.index += 5\r\n      this.tickets.strikeTicket({ id, ticket }).then((res) => {\r\n        this.tickets.loadTickets()\r\n        tickets.ticketCount(this.users.user)\r\n        this.tickets.setLoader()\r\n      })\r\n    } else {\r\n      ticket.isComplete = true\r\n      this.tickets.resolve({ id, ticket }).then((res) => {\r\n        this.tickets.loadTickets()\r\n        tickets.ticketCount(this.users.user)\r\n        this.tickets.setLoader()\r\n      })\r\n    }\r\n  }\r\n\r\n  public resolve(id: number, ticket: Ticket): void {\r\n    this.tickets.setLoader()\r\n\r\n    ticket.isComplete = true\r\n    this.tickets.resolve({ id, ticket }).then((res) => {\r\n      this.tickets.loadTickets()\r\n      tickets.ticketCount(this.users.user)\r\n      this.tickets.setLoader()\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n"]}]}